@model SmartInItProjekat.Models.Furniture

@{
    /**/

    Layout = null;
}

<h2>Edit</h2>


@using (Html.BeginForm("Update", "Furnitures", FormMethod.Post, new {  @class = "form-horizontal", role = "form", onsubmit = "return SumbitForm(this)" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Furniture</h4>
        <hr />
        @Html.HiddenFor(model => model.FurnitureId)
        @Html.HiddenFor(model => model.Code)
        @Html.HiddenFor(model => model.PhotoType)

        <div class="form-group">
            @Html.LabelFor(model => model.Code, new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Code, new { id = "code" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", id = "name" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CountryOfOrigin, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CountryOfOrigin, new { htmlAttributes = new { @class = "form-control", id = "country" } })
                @Html.ValidationMessageFor(model => model.CountryOfOrigin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control", id = "year" } })
                @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", id = "price" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", id = "amount" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FurnitureSalonId, "Furniture Salon", htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.DropDownList("FurnitureSalonId", null, htmlAttributes: new { @class = "form-control", id = "shop" })
                @Html.ValidationMessageFor(model => model.FurnitureSalonId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, "Category", htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control", id = "category" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            <div style="position:relative;">
                @Html.LabelFor(model => model.ProductImage, "Image", htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    <a class="btn btn-outline-success" href="javascript:;">
                        Upload photo...
                        <input type="file" name="image" size="40"
                               style="position:absolute;z-index:2;top:0;
                               left:0;filter: alpha(opacity=0);opacity:0;
                               background-color:transparent;color:transparent;"
                               onchange='$("#upload-file-info").html($(this).val());' />
                    </a>
                    <span class="label label-info" id="upload-file-info"></span>
                </div>
            </div><br />
            @if (Model.ProductImage == null)
            {
                <div class="form-group col-md-10">No Photo</div>
            }
            else
            {
                <img id="image666" class="img-thumbnail" width="150" height="150"
                     src="@String.Format("data:{0}{1}{2}", Model.PhotoType, ";base64,", Convert.ToBase64String(Model.ProductImage))" />

            }*@
    </div>
    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-success" />
        <input type="reset" value="Reset" class="btn" />
    </div>
    @*</div>*@
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")"
        type="text/javascript">
</script>

<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"
        type="text/javascript">
</script>
